#
# Checking the conversions with newer 0.1.x modules
#

use v6.d;
use Test;
use lib '../version-new/lib';
use lib 'lib';
use Date::Calendar::Strftime:ver<0.1.0>;
use Date::Calendar::Aztec;
use Date::Calendar::Aztec::Cortes;
use Date::Calendar::Bahai;
use Date::Calendar::Bahai::Astronomical;
use Date::Calendar::Coptic;
use Date::Calendar::Ethiopic;
use Date::Calendar::Hebrew;
use Date::Calendar::Hijri;
use Date::Calendar::Gregorian;
use Date::Calendar::FrenchRevolutionary;
use Date::Calendar::FrenchRevolutionary::Arithmetic;
use Date::Calendar::FrenchRevolutionary::Astronomical;
use Date::Calendar::Julian;
use Date::Calendar::Julian::AUC;
use Date::Calendar::Maya;
use Date::Calendar::Maya::Astronomical;
use Date::Calendar::Maya::Spinden;
use Date::Calendar::Persian;
use Date::Calendar::Persian::Astronomical;

my $ver-hi = '0.1.1';
my @data  = (
     (1444,  8,  3, after-sunset,   'ba', "Istiqlál 18 Mul 0179 ☽"      , "Jum 03 Sha 1444 ☽", "Gregorian: 2023-02-23")
   , (1444,  8,  3, before-sunrise, 'ba', "Istiqlál 18 Mul 0179 ☾"      , "Jum 03 Sha 1444 ☾", "Gregorian: 2023-02-24")
   , (1444,  8,  3, daylight,       'ba', "Istiqlál 18 Mul 0179 ☼"      , "Jum 03 Sha 1444 ☼", "Gregorian: 2023-02-24")
   , (1444, 10,  1, after-sunset,   'be', "Jalál 14 Jal 0180 ☽"         , "Sab 01 Shw 1444 ☽", "Gregorian: 2023-04-21")
   , (1444, 10,  1, before-sunrise, 'be', "Jalál 14 Jal 0180 ☾"         , "Sab 01 Shw 1444 ☾", "Gregorian: 2023-04-22")
   , (1444, 10,  1, daylight,       'be', "Jalál 14 Jal 0180 ☼"         , "Sab 01 Shw 1444 ☼", "Gregorian: 2023-04-22")
   , (1444,  7, 23, after-sunset,   'co', "Pshoment 07 Mes 1739 ☽"      , "Thl 23 Raj 1444 ☽", "Gregorian: 2023-02-13")
   , (1444,  7, 23, before-sunrise, 'co', "Pshoment 07 Mes 1739 ☾"      , "Thl 23 Raj 1444 ☾", "Gregorian: 2023-02-14")
   , (1444,  7, 23, daylight,       'co', "Pshoment 07 Mes 1739 ☼"      , "Thl 23 Raj 1444 ☼", "Gregorian: 2023-02-14")
   , (1440,  1, 16, after-sunset,   'et', "Arb 17 Mes 2011 ☽"           , "Kha 16 Muh 1440 ☽", "Gregorian: 2018-09-26")
   , (1440,  1, 16, before-sunrise, 'et', "Arb 17 Mes 2011 ☾"           , "Kha 16 Muh 1440 ☾", "Gregorian: 2018-09-27")
   , (1440,  1, 16, daylight,       'et', "Arb 17 Mes 2011 ☼"           , "Kha 16 Muh 1440 ☼", "Gregorian: 2018-09-27")
   , (1442,  3, 18, after-sunset,   'fr', "Tridi 13 Bru 0229 ☽"         , "Arb 18 R.A 1442 ☽", "Gregorian: 2020-11-03")
   , (1442,  3, 18, before-sunrise, 'fr', "Quartidi 14 Bru 0229 ☾"      , "Arb 18 R.A 1442 ☾", "Gregorian: 2020-11-04")
   , (1442,  3, 18, daylight,       'fr', "Quartidi 14 Bru 0229 ☼"      , "Arb 18 R.A 1442 ☼", "Gregorian: 2020-11-04")
   , (1444,  7, 27, after-sunset,   'fa', "Nonidi 29 Plu 0231 ☽"        , "Sab 27 Raj 1444 ☽", "Gregorian: 2023-02-17")
   , (1444,  7, 27, before-sunrise, 'fa', "Décadi 30 Plu 0231 ☾"        , "Sab 27 Raj 1444 ☾", "Gregorian: 2023-02-18")
   , (1444,  7, 27, daylight,       'fa', "Décadi 30 Plu 0231 ☼"        , "Sab 27 Raj 1444 ☼", "Gregorian: 2023-02-18")
   , (1441,  4,  8, after-sunset,   'fe', "Quartidi 14 Fri 0228 ☽"      , "Jum 08 R.T 1441 ☽", "Gregorian: 2019-12-05")
   , (1441,  4,  8, before-sunrise, 'fe', "Quintidi 15 Fri 0228 ☾"      , "Jum 08 R.T 1441 ☾", "Gregorian: 2019-12-06")
   , (1441,  4,  8, daylight,       'fe', "Quintidi 15 Fri 0228 ☼"      , "Jum 08 R.T 1441 ☼", "Gregorian: 2019-12-06")
   , (1444, 10, 24, after-sunset,   'gr', "Sunday 14 May 2023 ☽"        , "Ith 24 Shw 1444 ☽", "Gregorian: 2023-05-14")
   , (1444, 10, 24, before-sunrise, 'gr', "Monday 15 May 2023 ☾"        , "Ith 24 Shw 1444 ☾", "Gregorian: 2023-05-15")
   , (1444, 10, 24, daylight,       'gr', "Monday 15 May 2023 ☼"        , "Ith 24 Shw 1444 ☼", "Gregorian: 2023-05-15")
   , (1445, 12, 17, after-sunset,   'he', "Yom Sheni 18 Siv 5784 ☽"     , "Ith 17 Hij 1445 ☽", "Gregorian: 2024-06-23")
   , (1445, 12, 17, before-sunrise, 'he', "Yom Sheni 18 Siv 5784 ☾"     , "Ith 17 Hij 1445 ☾", "Gregorian: 2024-06-24")
   , (1445, 12, 17, daylight,       'he', "Yom Sheni 18 Siv 5784 ☼"     , "Ith 17 Hij 1445 ☼", "Gregorian: 2024-06-24")
   , (1443,  6,  4, after-sunset,   'jl', "Friday 25 Dec 2021 ☽"        , "Sab 04 J.T 1443 ☽", "Gregorian: 2022-01-07")
   , (1443,  6,  4, before-sunrise, 'jl', "Saturday 26 Dec 2021 ☾"      , "Sab 04 J.T 1443 ☾", "Gregorian: 2022-01-08")
   , (1443,  6,  4, daylight,       'jl', "Saturday 26 Dec 2021 ☼"      , "Sab 04 J.T 1443 ☼", "Gregorian: 2022-01-08")
   , (1444,  8, 18, after-sunset,   'jc', "Friday 25 Feb 2776 ☽"        , "Sab 18 Sha 1444 ☽", "Gregorian: 2023-03-10")
   , (1444,  8, 18, before-sunrise, 'jc', "Saturday 26 Feb 2776 ☾"      , "Sab 18 Sha 1444 ☾", "Gregorian: 2023-03-11")
   , (1444,  8, 18, daylight,       'jc', "Saturday 26 Feb 2776 ☼"      , "Sab 18 Sha 1444 ☼", "Gregorian: 2023-03-11")
   , (1445, 10,  9, after-sunset,   'pe', "Chahar shanbe 29 Far 1403 ☽" , "Kha 09 Shw 1445 ☽", "Gregorian: 2024-04-17")
   , (1445, 10,  9, before-sunrise, 'pe', "Panj shanbe 30 Far 1403 ☾"   , "Kha 09 Shw 1445 ☾", "Gregorian: 2024-04-18")
   , (1445, 10,  9, daylight,       'pe', "Panj shanbe 30 Far 1403 ☼"   , "Kha 09 Shw 1445 ☼", "Gregorian: 2024-04-18")
   , (1444, 11, 17, after-sunset,   'pa', "Do shanbe 15 Kho 1402 ☽"     , "Thl 17 Qid 1444 ☽", "Gregorian: 2023-06-05")
   , (1444, 11, 17, before-sunrise, 'pa', "Se shanbe 16 Kho 1402 ☾"     , "Thl 17 Qid 1444 ☾", "Gregorian: 2023-06-06")
   , (1444, 11, 17, daylight,       'pa', "Se shanbe 16 Kho 1402 ☼"     , "Thl 17 Qid 1444 ☼", "Gregorian: 2023-06-06")
            );
my @data-maya = (
       (1444, 11, 13, after-sunset,   'm0', " 2 Zotz 10 Men"    , "Jum 13 Qid 1444 ☽", "Gregorian: 2023-06-01")
     , (1444, 11, 13, before-sunrise, 'm0', " 2 Zotz 10 Men"    , "Jum 13 Qid 1444 ☾", "Gregorian: 2023-06-02")
     , (1444, 11, 13, daylight,       'm0', " 3 Zotz 10 Men"    , "Jum 13 Qid 1444 ☼", "Gregorian: 2023-06-02")
     , (1440,  7, 14, after-sunset,   'm1', "11 Cumku 8 Cauac"  , "Kha 14 Raj 1440 ☽", "Gregorian: 2019-03-20")
     , (1440,  7, 14, before-sunrise, 'm1', "11 Cumku 8 Cauac"  , "Kha 14 Raj 1440 ☾", "Gregorian: 2019-03-21")
     , (1440,  7, 14, daylight,       'm1', "12 Cumku 8 Cauac"  , "Kha 14 Raj 1440 ☼", "Gregorian: 2019-03-21")
     , (1443,  3,  4, after-sunset,   'm2', "12 Yax 8 Men"      , "Ith 04 R.A 1443 ☽", "Gregorian: 2021-10-10")
     , (1443,  3,  4, before-sunrise, 'm2', "12 Yax 8 Men"      , "Ith 04 R.A 1443 ☾", "Gregorian: 2021-10-11")
     , (1443,  3,  4, daylight,       'm2', "13 Yax 8 Men"      , "Ith 04 R.A 1443 ☼", "Gregorian: 2021-10-11")
     , (1442, 10, 25, after-sunset,   'a0', " 5 Teotleco 12 Atl", "Ahd 25 Shw 1442 ☽", "Gregorian: 2021-06-05")
     , (1442, 10, 25, before-sunrise, 'a0', " 5 Teotleco 12 Atl", "Ahd 25 Shw 1442 ☾", "Gregorian: 2021-06-06")
     , (1442, 10, 25, daylight,       'a0', " 6 Teotleco 12 Atl", "Ahd 25 Shw 1442 ☼", "Gregorian: 2021-06-06")
     , (1441,  5, 24, after-sunset,   'a1', "10 Toxcatl 6 Atl"  , "Ith 24 J.A 1441 ☽", "Gregorian: 2020-01-19")
     , (1441,  5, 24, before-sunrise, 'a1', "10 Toxcatl 6 Atl"  , "Ith 24 J.A 1441 ☾", "Gregorian: 2020-01-20")
     , (1441,  5, 24, daylight,       'a1', "11 Toxcatl 6 Atl"  , "Ith 24 J.A 1441 ☼", "Gregorian: 2020-01-20")

            );

my %class =   a0 => 'Date::Calendar::Aztec'
            , a1 => 'Date::Calendar::Aztec::Cortes'
            , ba => 'Date::Calendar::Bahai'
            , be => 'Date::Calendar::Bahai::Astronomical'
            , gr => 'Date::Calendar::Gregorian'
            , co => 'Date::Calendar::Coptic'
            , et => 'Date::Calendar::Ethiopic'
            , fr => 'Date::Calendar::FrenchRevolutionary'
            , fa => 'Date::Calendar::FrenchRevolutionary::Arithmetic'
            , fe => 'Date::Calendar::FrenchRevolutionary::Astronomical'
            , he => 'Date::Calendar::Hebrew'
            , hi => 'Date::Calendar::Hijri'
            , jl => 'Date::Calendar::Julian'
            , jc => 'Date::Calendar::Julian::AUC'
            , m0 => 'Date::Calendar::Maya'
            , m1 => 'Date::Calendar::Maya::Astronomical'
            , m2 => 'Date::Calendar::Maya::Spinden'
            , pe => 'Date::Calendar::Persian'
            , pa => 'Date::Calendar::Persian::Astronomical'
            ;

plan 12 × @data.elems
   + 12 × @data-maya.elems;

for (@data) -> $datum {
  my ($year, $month, $day, $daypart, $cal, $str2, $str3) = $datum;
  my Date::Calendar::Hijri $d1 .= new(year => $year, month => $month, day => $day, daypart => $daypart);

  # push-push
  my $d2 = $d1.to-date(%class{$cal});
  is($d2.strftime("%A %d %b %Y %Ep"), $str2, "testing push with $str2");
  is($d2.^ver.Str.substr(0, 4), '0.1.');
  my $d3 = $d2.to-date(%class<hi>);
  is($d3.strftime("%a %d %b %Y %Ep"), $str3, "testing push-push with $str2 and $str3");
  is($d3.^ver, $ver-hi);

  # push-pull
  my Date::Calendar::Hijri $d4 .= new-from-date($d2);
  is($d4.strftime("%a %d %b %Y %Ep"), $str3, "testing push-pull with $str2 and $str3");
  is($d4.^ver, $ver-hi);

  # pull-push
  my $d5 = ::(%class{$cal}).new-from-date($d1);
  is($d5.strftime("%A %d %b %Y %Ep"), $str2, "testing pull with $str2");
  is($d5.^ver.Str.substr(0, 4), '0.1.');
  my $d6 = $d5.to-date(%class<hi>);
  is($d6.strftime("%a %d %b %Y %Ep"), $str3, "testing pull-push with $str2 and $str3");
  is($d6.^ver, $ver-hi);

  # pull-pull
  my Date::Calendar::Hijri $d7 .= new-from-date($d5);
  is($d7.strftime("%a %d %b %Y %Ep"), $str3, "testing pull-pull with $str2 and $str3");
  is($d7.^ver, $ver-hi);
}

for (@data-maya) -> $datum {
  my ($year, $month, $day, $daypart, $cal, $str2, $str3) = $datum;
  my Date::Calendar::Hijri $d1 .= new(year => $year, month => $month, day => $day, daypart => $daypart);

  # push-push
  my $d2 = $d1.to-date(%class{$cal});
  is($d2.strftime("%e %B %V %A"), $str2, "testing push with $str2");
  is(substr($d2.^ver.Str, 0, 4), '0.1.');
  my $d3 = $d2.to-date(%class<hi>);
  is($d3.strftime("%a %d %b %Y %Ep"), $str3, "testing push-push with $str2 and $str3");
  is($d3.^ver, $ver-hi);

  # push-pull
  my Date::Calendar::Hijri $d4 .= new-from-date($d2);
  is($d4.strftime("%a %d %b %Y %Ep"), $str3, "testing push-pull with $str2 and $str3");
  is($d4.^ver, $ver-hi);

  # pull-push
  my $d5 = ::(%class{$cal}).new-from-date($d1);
  is($d5.strftime("%e %B %V %A"), $str2, "testing pull with $str2");
  is(substr($d5.^ver.Str, 0, 4), '0.1.');
  my $d6 = $d5.to-date(%class<hi>);
  is($d6.strftime("%a %d %b %Y %Ep"), $str3, "testing pull-push with $str2 and $str3");
  is($d6.^ver, $ver-hi);

  # pull-pull
  my Date::Calendar::Hijri $d7 .= new-from-date($d5);
  is($d7.strftime("%a %d %b %Y %Ep"), $str3, "testing pull-pull with $str2 and $str3");
  is($d7.^ver, $ver-hi);
}

done-testing;
